security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    encoders:
        App\Entity\Roster:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Roster
                property: rostername
    firewalls:
        login:
            pattern:  ^/login_check
            stateless: true
            anonymous: true
            json_login:
                username_path: rostername
                check_path:               /login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api_register:
            pattern: ^/roster/register
            stateless: true
            anonymous: true

        app_confirm_email:
            pattern : ^/confirmemail/
            stateless: true
            anonymous: true

        app_check_email_password:
            pattern: ^/checkEmailPassword
            stateless: true
            anonymous: true

        app_redirect_password:
            pattern: ^/redirectPassword
            stateless: true
            anonymous: true

        app_change_password:
            pattern: ^/changePassword
            stateless: true
            anonymous: true

        api:
            pattern:   ^/
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/roster/register, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/changePassword, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/confirmemail, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/checkEmailPassword, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/redirectPassword, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
